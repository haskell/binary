name:            binary
version:         0.6.2.0
license:         BSD3
license-file:    LICENSE
author:          Lennart Kolmodin <kolmodin@gmail.com>
maintainer:      Lennart Kolmodin, Don Stewart <dons@galois.com>
homepage:        https://github.com/kolmodin/binary
description:     Efficient, pure binary serialisation using lazy ByteStrings.
                 Haskell values may be encoded to and from binary formats,
                 written to disk as binary, or sent over the network.
                 Serialisation speeds of over 1 G\/sec have been observed,
                 so this library should be suitable for high performance
                 scenarios.
synopsis:        Binary serialisation for Haskell values using lazy ByteStrings
category:        Data, Parsing
stability:       provisional
build-type:      Simple
cabal-version:   >= 1.8
tested-with:     GHC == 7.0.4, GHC == 7.4.1, GHC == 7.6.1
extra-source-files: README index.html

source-repository head
  type: git
  location: git://github.com/kolmodin/binary.git

flag development
  default: False

library
  build-depends:   base >= 3.0 && < 5, bytestring >= 0.9, containers, array
  hs-source-dirs:  src
  exposed-modules: Data.Binary,
                   Data.Binary.Put,
                   Data.Binary.Get,
                   Data.Binary.Get.Internal,
                   Data.Binary.Builder,
                   Data.Binary.Builder.Internal

  other-modules:   Data.Binary.Builder.Base,
                   Data.Binary.Class

  if impl(ghc >= 7.2.1)
    cpp-options: -DGENERICS
    other-modules: Data.Binary.Generic

  ghc-options:     -O2 -Wall -fliberate-case-threshold=1000

test-suite qc
  type:  exitcode-stdio-1.0
  hs-source-dirs: tests
  main-is: QC.hs
  build-depends:
    array,
    base >= 3.0 && < 5,
    bytestring >= 0.9,
    containers,
    random>=1.0.1.0,
    test-framework,
    test-framework-quickcheck2,
    QuickCheck>=2.5

  ghc-options: -Wall
  hs-source-dirs: src

benchmark bench
  type: exitcode-stdio-1.0
  hs-source-dirs: benchmarks
  main-is: Benchmark.hs
  build-depends:
    base >= 3.0 && < 5,
    binary,
    bytestring
  c-sources: benchmarks/CBenchmark.c
  include-dirs: benchmarks
  ghc-options: -O2

benchmark get
  type: exitcode-stdio-1.0
  hs-source-dirs: benchmarks
  main-is: Get.hs
  build-depends:
    base >= 3.0 && < 5,
    binary,
    bytestring,
    criterion,
    deepseq,
    mtl
  ghc-options: -O2

benchmark builder
  type: exitcode-stdio-1.0
  hs-source-dirs: benchmarks
  main-is: Builder.hs
  build-depends:
    base >= 3.0 && < 5,
    binary,
    bytestring,
    criterion,
    deepseq,
    mtl
  ghc-options: -O2
